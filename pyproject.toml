[tool.poetry]
name = "wind_ai"
version = "0.1.0"
description = "CNext Wind AI"
authors = ["Oneris Rico"]
readme = "README.md"
packages = [{include="wind_ai", from="src"}]

[tool.poetry.scripts]
wind-ai-start = "wind_ai.server:main"

[tool.poetry.dependencies]
python = ">=3.11,<4.0"
hbtools = "^0.0.4"
python-dotenv = "^1.0.0"
openai = "^0.27.7"

[tool.poetry.group.dev.dependencies]
ruff = "0.0.270"
pyright = "^1.1.278"
pre-commit = "^3.3.2"
flake8-comprehensions = "^3.12.0"
flake8-docstrings = "^1.7.0"
flake8-builtins = "^2.1.0"
flake8-quotes = "^3.3.2"
pep8-naming = "^0.13.3"
flake8-import-order = "^0.18.2"
flake8-noqa = "^1.3.1"
flake8-broken-line = "^0.6.0"
flake8-commas = "^2.1.0"
Flake8-pyproject = "^1.2.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib",]

[tool.ruff]
select = ["ALL"]
# D1: Do not require docstrings
# D203: one-blank-line-before-class  (incompatible)
# D213: multi-line-summary-second-line  (incompatible)
# D407: Missing dashed underline after section ("Args", "Returns")
# ERA001: Found commented-out code
# G004: Logging statement uses f-string
ignore = ["D1", "D203", "D213", "D407", "ERA001", "G004", "S311", "TRY"]
line-length = 120

[tool.ruff.isort]
order-by-type = false
known-first-party = ["wind_ai"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.pyright]
include = ["src/wind_ai"]
pythonVersion = "3.11"
pythonPlatform = "Linux"

strictListInference = true
strictDictionaryInference = true
strictSetInference = true
reportMissingModuleSource = false
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = true
reportUnusedClass = "warning"
reportUnusedFunction = "warning"
reportUnusedVariable = "warning"
reportDuplicateImport = "warning"
reportUntypedNamedTuple = "warning"
reportUntypedFunctionDecorator = "warning"
reportUntypedClassDecorator = "warning"
reportMissingSuperCall = false
reportUnknownArgumentType = "warning"
reportUnknownLambdaType = "warning"
reportUnknownVariableType = "warning"
reportUnknownMemberType = false
reportMissingParameterType = "warning"
reportMissingTypeArgument = "warning"
reportCallInDefaultInitializer = false
reportUnnecessaryIsInstance = "warning"
reportUnnecessaryCast = "warning"
reportUnnecessaryComparison = "warning"
reportImplicitStringConcatenation = false
reportUnusedCallResult = false
reportUnusedExpression = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportMatchNotExhaustive = "warning"

[tool.flake8]
max-line-length = 120
docstring-convention = "google"
import-order-style = "smarkets"
application_import_names = "wind_ai"
inline-quotes = "double"
exclude = ["env", "venv"]
# D1: Do not require docstrings
# NQA102 "# noqa: X" has no matching violations
ignore = ["D1", "NQA102"]

[tool.pylint.messages_control]
max-line-length = 120
disable = [
    "no-member",
    "import-outside-toplevel",
]
